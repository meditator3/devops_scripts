the service of config map:

apiVersion: apps/v1
kind: Deployment
metadata:
  name: helloworld-deployment
  labels:
    app: helloworld
    environment: QA
    department: IT
spec:
  replicas: 3
  selector:
    matchLabels:
      app: helloworld
  template:
    metadata:
      labels:
        app: helloworld
        environment: QA
        department: IT
    spec:
      containers:
      - name: k8s-demo
        image: wardviaene/k8s-demo
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: config-volume
          mountPath: /etc/config
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 15
          timeoutSeconds: 30
        readinessProbe:
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 1
          tcpSocket:
            host:
            port: 3000
      volumes:
      - name: config-volume
        configMap:
          name: app-config



-----
-----
the data of the config map itself:
driver=jdbc
database=postgres
lookandfell=1
otherparams=xyz
param.with.hierarchy=xyz

----BUT those are just values ^^^ /data to be installed/referenced for the app. and each one will create a file by that name and value in it according to the key pair values.
for example there will be a file inside the container at /etc/config called driver and the value in it will be jdbc!

proper configmap.yaml for this:
-------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  driver: jdbc
  database: postgres
  lookandfeel: "1"
  otherparams: xyz
  param.with.hierarchy: xyz
---------
now, k8s will reference the name app-config from the deployment and extract the values accordingly.
