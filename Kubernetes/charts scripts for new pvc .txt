
pvc.yaml that we wrote from scratch:
-----------------------
{{- if .Values.pvc.enabled }}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ include "application-demo.fullname" . }}
  labels:
    {{- include "application-demo.labels" . | nindent 4 }}
spec:
{{ - if .Values.pvc.storageClass }}
{{ - if (eq "-" .Values.pvc.storageClass) }}
  storageClassName: ""
{{- else }}
   storageClassName: {{ .Values.pvc.storageClass }}
  accessModes:
    - {{ .Values.pvc.accessMode | quote }}
  resources:
    requests:
      storage: {{ .Values.pvc.size | quote }}
      {{- end }}
  {{- end }}      
  {{- end }} 




---------


changed of
app-values.yaml:
------

# Default values for application-demo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: lidorg-dev/hello-world-python
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: app-demo.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
pvc:
  enabled: true
  storageClass: "" # please add your own SC or default
  accessMode: "" # ReadWriteMany |
  size: 50Mi 
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
