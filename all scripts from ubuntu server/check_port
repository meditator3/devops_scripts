#! /usr/bin/env python3.8

#need to use standard library, inherent library of python
# we need to use lsof in linux
# which shows processes and files using ports or sockets
# lsof -n -i4TCP these switches: no host name(-n) (i4)(ivp4)
# make sure nginx is running and is showing in the ports of lsof command!
# then we want to do it on server in port 5000, so we create a server
# so we do in bash : python3 -m http.server 5000 &   <<<< we use "&" to create a process to tun in the background!
# make sure again in lson -n -i4TCP  don't forget sudo!

# we use parser because its a script running with arguments
import subprocess
import os
from argparse import ArgumentParser


parser = ArgumentParser(description='kill the running processes listening on a given port')
parser.add_argument('port', type=int, help='the port number to search for')

port = parser.parse_args().port

try:
    result = subprocess.run(
        ['lsof', '-n', 'i4TCP:%s' % port],  # we create it as a list/array not as a whole string/argument
        stdout = subprocess.PIPE,
        stderr = subprocess.PIPE)
except subprocess.CalledProcessError:
    print(f"No process listening on port {port}")
else:
    listening = None

    for line in result.stdout.splitlines(): #[1] means what column
        if "LISTEN" in str(line):
            listening = line
            break
    if listening:
        pid = int(listening.split()[1]) # process id
        os.kill(pid, 9) # kill is built in python, 9 is forcefully
        print(f"Killed process {pid}")
    else:
        print(f"No process listening port {port}")

